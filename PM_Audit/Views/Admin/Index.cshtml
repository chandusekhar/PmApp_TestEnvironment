@{
    ViewBag.Title = "Admin Manager";
    Layout = "~/Views/Shared/Application_Layout.cshtml";
}

@section Scripts
    {
    @Scripts.Render("~/bundles/GlobalScripts")
    <script type="text/javascript">
        $(function () {
            $("#btn_Search").on("click", function () {
                GetUserRolesPermissions();
            });
            $("#btn_update").on("click", function () {
                UpdateRights();
            });
        });
        function onChangePermissions(obj) {
            if ($(obj).closest('.module-permissions-fieldset').find('.permission:not(:checked)').length == 0) {
                $(obj).closest('.module-div').find('.select-all').prop("checked", true);
            }
            else {
                $(obj).closest('.module-div').find('.select-all').prop("checked", false);
            }
        }
        function onChangeModulePermissions(obj) {
            debugger;
            if ($(obj).is(":checked")) {
                $(obj).closest('.module-div').find('.permission').prop("checked", true);
            }
            else {
                $(obj).closest('.module-div').find('.permission').prop("checked", false);
            }
        }
        function GetUserRolesPermissions() {
            var userName = $("#txt_username").val();
            if (userName) {
                var data = new Object();
                data.User_Name = userName;
                ApiCallService.Ajax('@System.Configuration.ConfigurationManager.AppSettings["ApiPath"]', "api/Admin/getUserRolePermissions", data, onSuccessRoles, "GET")
            }
            else {
                //  alert("Please enter a valid User Name.");
                alertify.alert('Alert', 'Please enter a valid User Name.')
                $("#txt_username").val('');
                return;
            }

        }
        function onSuccessRoles(results) {
            if (results.User_Name != null && results.User_Name != '') {
                //  $("#txt_username").prop('disabled', true);
                GetModulePermissions();
                $("#spn_updateBy").text(results.Modified_By);
                $("#spn_updateDate").text(results.Modified_Date);
            }
            else {
                $("#txt_username").val('');
                //  $("#txt_username").prop('disabled', false);
                $('#rightscontent').html('');
                $("#spn_updateBy").text("");
                $("#spn_updateDate").text("");
                $('#DivRightsUpdate').hide();

                //  alert("Please enter a valid User Name.");
                alertify.alert('Alert', 'Please enter a valid User Name.')
                return;
            }
        }
        function GetModulePermissions() {
            ApiCallService.Ajax('@System.Configuration.ConfigurationManager.AppSettings["ApiPath"]', "api/Admin/getModulePermissions", "", onSuccessModulePermissions, "GET")
        }
        function onSuccessModulePermissions(results) {
            var html = '';
            results.forEach(function (ModulePermission) {
                html += '<div class="col-md-6 module-div" style="margin-bottom:5px;"><div class="form-group"><div class="checkbox"><label><input onchange="onChangeModulePermissions(this)" class="select-all" type="checkbox" name="' + ModulePermission.Module_Name + '">';
                html += ModulePermission.Module_Name;
                html += '</label> </div></div> <fieldset class="module-permissions-fieldset" style="border:1px solid white">';

                for (var i = 0; i < ModulePermission.PermissionsList.length; i++) {
                    var perm = ModulePermission.PermissionsList[i];
                    html += '<div class="col-md-6 permission-div"><div class="form-group"><div class="checkbox"><label> <input  onchange="onChangePermissions(this)" class="permission" name="' + perm + '" type="checkbox">';
                    html += GetFormatedPermissions(perm);
                    html += '</label></div> </div></div>';
                }
                html += ' </fieldset></div>';
            });
            if (html != '') {
                $('#rightscontent').html(html);
                $('#DivRightsUpdate').show();
            }
        }
        function GetFormatedPermissions(str) {
            if (!str)
            { return ""; }
            else {
                str = str.replace("perm_", "");
                str = str.replace(/_/g, " ");
                return str.toUpperCase();
            }
      
        }
        function UpdateRights() {
            debugger;
            var listPermissions = [];
            $('.permission:checked').each(function () {
                listPermissions.push($(this).attr('name'));
            });
            var userName = $("#txt_username").val();
            var data = new Object();
            data.User_Name = userName;
            data.PermissionsList = listPermissions;
            ApiCallService.Ajax('@System.Configuration.ConfigurationManager.AppSettings["ApiPath"]', "api/Admin/updateUserRights", data, onSuccessUpdateRights)
        }
        function onSuccessUpdateRights(results) {
            debugger;
            if (results == "success")
                // alert("PM opened successfully.");
                alertify.alert('Alert', 'PM opened successfully!')
            $("#txt_username").val('');
            $('#rightscontent').html('');
            $('#DivRightsUpdate').hide();
        }
    </script>
}

<section class="container text-JazzYellow">
    <div>
        <div class="py-5 text-center">
            <h3>User Rights Management</h3>
            <p class="lead">Search user with username to assign rights.</p>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-4 col-md-offset-3">
            <input class="form-control" type="text" id="txt_username" placeholder="Enter User Name." />
        </div>
        <div class="form-group col-md-2">
            <button class="btn btn-primary btn-block btn-flat login_btn  form-inline" type="button" id="btn_Search">Search</button>
        </div>
    </div>
    <div class="row" id="rightscontent"> </div>
    <div class="row" id="DivRightsUpdate" style="display:none;">
        <div class="form-group col-md-6 pull-left">
            <div class="col-md-6"><p>Last Updated: <span id="spn_updateDate"></span></p></div>
            <div class="col-md-6"><p>Update By: <span id="spn_updateBy"></span></p></div>

        </div>
        <div class="form-group col-md-3 pull-right">
            <button class="btn btn-primary btn-block btn-flat login_btn  form-inline" type="button" id="btn_update">Update</button>
        </div>
    </div>

</section>
